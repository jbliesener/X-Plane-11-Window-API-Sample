name: CMake

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]
  release:
    type: [created, edited]
  workflow_dispatch:
    

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: RelWithDebInfo

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-13
#          - macos-latest          

    runs-on: ${{matrix.os}}

    steps:
    - uses: actions/checkout@v2

    - name: "Windows: Configure environment"
      if: runner.os == 'Windows'
      shell: bash
      run: |
        # Select MinGW toolchain instead of the default MSVC.
        echo "CMAKE_GENERATOR=MinGW Makefiles" >> $GITHUB_ENV

    - name: "Linux: Install dependency libraries"
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends freeglut3-dev libudev-dev libopenal-dev

    - name: Configure CMake
      working-directory: ${{github.workspace}}/src
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      working-directory: ${{github.workspace}}/src
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}
      
    - uses: actions/upload-artifact@v4
      with:
        name: binaries-${{matrix.os}}
        path: ${{github.workspace}}/build/*.xpl
        if-no-files-found: error

  package:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v4
        with:
          path: XP11WindowApiSample/64
          pattern: binaries-*
          merge-multiple: true

      - uses: actions/upload-artifact@v4
        with:
          name: XP11WindowApiSample_plugin
          path: |
            ${{github.workspace}}/XP11WindowApiSample*
          if-no-files-found: error

      - name: Create plugin archive
        if: github.event_name == 'release'
        run: zip -r XP11WindowApiSample.zip XP11WindowApiSample/

      - name: Upload binaries to release
        if: github.event_name == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: XP11WindowApiSample.zip
          tag: ${{ github.ref }}
          overwrite: true
